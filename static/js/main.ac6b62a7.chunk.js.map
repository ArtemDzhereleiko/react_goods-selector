{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","renderingTitle","renderTitle","length","lastItemSelected","copyOfSelected","join","isSelected","goods","some","goodsItem","addGoodsToSelect","setState","prevState","push","removeFromSelect","splice","indexOf","clearSelect","className","this","type","onClick","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAkHaC,E,4MA9GbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,eAAiB,WACf,IAAIC,EAAc,GAElB,GAAwC,IAApC,EAAKH,MAAMC,cAAcG,OAC3BD,EAAc,yBACT,GAAwC,IAApC,EAAKH,MAAMC,cAAcG,OAClCD,EAAW,UAAM,EAAKH,MAAMC,cAAjB,qBACN,GAAI,EAAKD,MAAMC,cAAcG,OAAS,EAAG,CAC9C,IAAMC,EACF,EAAKL,MAAMC,cAAc,EAAKD,MAAMC,cAAcG,OAAS,GACzDE,EAAc,YAAO,EAAKN,MAAMC,eAEtCK,EAAeF,QAAU,EACzBD,EAAW,UACJG,EAAeC,KAAK,MADhB,gBAC6BF,EAD7B,iBAIb,OAAOF,G,EAGTK,WAAa,SAAAC,GAAK,OAChB,EAAKT,MAAMC,cAAcS,MACvB,SAAAC,GAAS,OAAIA,IAAcF,M,EAI/BG,iBAAmB,SAACH,GAClB,EAAKI,UAAS,SAAAC,GAAS,OAAIA,EAAUb,cAAcc,KAAKN,O,EAG1DO,iBAAmB,SAACP,GAClB,EAAKI,UACH,SAAAC,GAAS,OAAIA,EAAUb,cAAcgB,OACnCH,EAAUb,cAAciB,QAAQT,GAAQ,O,EAK9CU,YAAc,WACZ,EAAKN,UACH,SAAAC,GAAS,OAAIA,EAAUb,cAAcgB,OACnC,EAAGH,EAAUb,cAAcG,Y,4CAKjC,WAAU,IAAD,OACP,OACE,yBAAKgB,UAAU,OACb,yBAAKA,UAAU,cACb,qDAEoBC,KAAKnB,mBAGvBmB,KAAKrB,MAAMC,cAAcG,OAEvB,4BACEkB,KAAK,SACLF,UAAU,uBACVG,QAAS,kBAAM,EAAKJ,gBAHtB,KAQA,IAGN,wBAAIC,UAAU,iBACXtB,EAAgB0B,KAAI,SAAAf,GAAK,OACxB,wBACEgB,IAAKhB,EACLW,UAAS,oBAAe,EAAKZ,WAAWC,GAAS,SAAW,KAE3DA,EACA,EAAKD,WAAWC,IACf,4BACEgB,IAAKhB,EACLa,KAAK,SACLF,UAAU,SACVG,QAAS,WACP,EAAKX,iBAAiBH,KAL1B,OAWD,EAAKD,WAAWC,IACf,4BACEa,KAAK,SACLF,UAAU,SACVG,QAAS,WACP,EAAKP,iBAAiBP,KAJ1B,oB,GA7FEiB,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ac6b62a7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  renderingTitle = () => {\n    let renderTitle = '';\n\n    if (this.state.selectedGoods.length === 0) {\n      renderTitle = 'NO GOODS SELECTED';\n    } else if (this.state.selectedGoods.length === 1) {\n      renderTitle = `${this.state.selectedGoods} is selected`;\n    } else if (this.state.selectedGoods.length > 1) {\n      const lastItemSelected\n        = this.state.selectedGoods[this.state.selectedGoods.length - 1];\n      const copyOfSelected = [...this.state.selectedGoods];\n\n      copyOfSelected.length -= 1;\n      renderTitle\n        = `${copyOfSelected.join(', ')} and ${lastItemSelected} are selected`;\n    }\n\n    return renderTitle;\n  };\n\n  isSelected = goods => (\n    this.state.selectedGoods.some(\n      goodsItem => goodsItem === goods,\n    )\n  );\n\n  addGoodsToSelect = (goods) => {\n    this.setState(prevState => prevState.selectedGoods.push(goods));\n  };\n\n  removeFromSelect = (goods) => {\n    this.setState(\n      prevState => prevState.selectedGoods.splice(\n        prevState.selectedGoods.indexOf(goods), 1,\n      ),\n    );\n  };\n\n  clearSelect = () => {\n    this.setState(\n      prevState => prevState.selectedGoods.splice(\n        0, prevState.selectedGoods.length,\n      ),\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"list-title\">\n          <h1>\n            {\n            `Selected good: ${this.renderingTitle()}`\n            }\n          </h1>\n          { this.state.selectedGoods.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"button button--clear\"\n                onClick={() => this.clearSelect()}\n              >\n                X\n              </button>\n            )\n            : ''\n          }\n        </div>\n        <ul className=\"list-of-goods\">\n          {goodsFromServer.map(goods => (\n            <li\n              key={goods}\n              className={`list-item ${this.isSelected(goods) ? 'active' : ''}`}\n            >\n              {goods}\n              {this.isSelected(goods) || (\n                <button\n                  key={goods}\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.addGoodsToSelect(goods);\n                  }}\n                >\n                  Add\n                </button>\n              )}\n              {this.isSelected(goods) && (\n                <button\n                  type=\"button\"\n                  className=\"button\"\n                  onClick={() => {\n                    this.removeFromSelect(goods);\n                  }}\n                >\n                  Remove\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}