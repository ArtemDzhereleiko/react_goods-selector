{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","getRenderingTitle","length","slice","join","isSelected","goods","some","goodsItem","addGoodsToSelect","setState","prevState","push","removeFromSelect","filter","good","clearGoods","className","this","type","onClick","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+NAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA+FaC,E,4MA3FbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,kBAAoB,WAClB,OAAwC,IAApC,EAAKF,MAAMC,cAAcE,OACrB,GAAN,OAAU,EAAKH,MAAMC,cAArB,gBAGE,EAAKD,MAAMC,cAAcE,OAAS,EAC9B,GAAN,OAAU,EAAKH,MAAMC,cAAcG,MAAM,GAAI,GAAGC,KAAK,MAArD,yBACQ,EAAKL,MAAMC,cAAc,EAAKD,MAAMC,cAAcE,OAAS,GADnE,0BAKK,qB,EAGTG,WAAa,SAAAC,GAAK,OAChB,EAAKP,MAAMC,cAAcO,MACvB,SAAAC,GAAS,OAAIA,IAAcF,M,EAI/BG,iBAAmB,SAACH,GAClB,EAAKI,UAAS,SAAAC,GAAS,OAAIA,EAAUX,cAAcY,KAAKN,O,EAG1DO,iBAAmB,SAACP,GAClB,EAAKI,UACH,SAAAC,GAAS,MAAK,CACZX,cAAeW,EAAUX,cAAcc,QAAO,SAAAC,GAAI,OAAIA,IAAST,U,EAMrEU,WAAa,kBAAO,EAAKN,SAAS,CAAEV,cAAe,M,4CAEnD,WAAU,IAAD,OACP,OACE,yBAAKiB,UAAU,OACb,yBAAKA,UAAU,cACb,qDAEoBC,KAAKjB,sBAGvBiB,KAAKnB,MAAMC,cAAcE,OAEvB,4BACEiB,KAAK,SACLF,UAAU,uBACVG,QAASF,KAAKF,YAHhB,KAQA,IAGN,wBAAIC,UAAU,iBACXpB,EAAgBwB,KAAI,SAAAf,GAAK,OACxB,wBACEgB,IAAKhB,EACLW,UAAS,oBAAe,EAAKZ,WAAWC,GAAS,SAAW,KAE3DA,EACD,4BACEgB,IAAKhB,EACLa,KAAK,SACLF,UAAU,SACVG,QAAS,EAAKf,WAAWC,GACrB,WACA,EAAKO,iBAAiBP,IAEtB,WACA,EAAKG,iBAAiBH,KAIzB,EAAKD,WAAWC,GAAS,SAAW,iB,GAlFnCiB,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f6a3b3cd.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  }\n\n  getRenderingTitle = () => {\n    if (this.state.selectedGoods.length === 1) {\n      return `${this.state.selectedGoods} is selected`;\n    }\n\n    if (this.state.selectedGoods.length > 1) {\n      return `${this.state.selectedGoods.slice(0, -1).join(', ')}\n        and ${this.state.selectedGoods[this.state.selectedGoods.length - 1]}\n        are selected`;\n    }\n\n    return 'NO GOODS SELECTED';\n  };\n\n  isSelected = goods => (\n    this.state.selectedGoods.some(\n      goodsItem => goodsItem === goods,\n    )\n  );\n\n  addGoodsToSelect = (goods) => {\n    this.setState(prevState => prevState.selectedGoods.push(goods));\n  };\n\n  removeFromSelect = (goods) => {\n    this.setState(\n      prevState => ({\n        selectedGoods: prevState.selectedGoods.filter(good => good !== goods),\n      }\n      ),\n    );\n  };\n\n  clearGoods = () => (this.setState({ selectedGoods: [] }));\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"list-title\">\n          <h1>\n            {\n            `Selected good: ${this.getRenderingTitle()}`\n            }\n          </h1>\n          { this.state.selectedGoods.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"button button--clear\"\n                onClick={this.clearGoods}\n              >\n                X\n              </button>\n            )\n            : ''\n          }\n        </div>\n        <ul className=\"list-of-goods\">\n          {goodsFromServer.map(goods => (\n            <li\n              key={goods}\n              className={`list-item ${this.isSelected(goods) ? 'active' : ''}`}\n            >\n              {goods}\n              <button\n                key={goods}\n                type=\"button\"\n                className=\"button\"\n                onClick={this.isSelected(goods)\n                  ? () => {\n                    this.removeFromSelect(goods);\n                  }\n                  : () => {\n                    this.addGoodsToSelect(goods);\n                  }\n                }\n              >\n                {this.isSelected(goods) ? 'Remove' : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}